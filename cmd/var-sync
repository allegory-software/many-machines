#!/bin/bash
# MM VAR ;; sync relevant vars to machine so it can use mm locally
. mmlib

# scan a dir for symlinks and print all their targets.
# dir targets are scanned again recursively.
all_targets() { # BASE_DIR= DIR
	find "$1" -type l | while read -r l; do
		local t=$(realpath --relative-to="$BASE_DIR" "$l")
		[[ "$1" == ..* ]] && die "External symlink: $t"
		printf "%s\n" "$t"
		[[ -d "$t" ]] && all_targets "$t"
	done
	return 0
}

# NOTE: all symlink targets must be internal to BASE_DIR.
# TODO: doesn't itself work with FILE_LIST, only scans SRC_DIR for symlinks.
rsync_dir_with_link_targets() {
	checkvars BASE_DIR SRC_DIR
	rsync_dir
	local FILE_LIST=`all_targets $SRC_DIR` || die "Symlinks external to $BASE_DIR detected."
	SRC_DIR=$BASE_DIR rsync_dir
}

_f() {
	BASE_DIR=.
	DST_MACHINE=$MACHINE
	DST_DIR=/root/mm/
	[[ $DEPLOY ]] && SRC_DIR=var/deploys/$DEPLOY || SRC_DIR=var/machines/$MACHINE
	rsync_dir_with_link_targets
	ssh_script 'ln_file var/machines/$MACHINE /root/mm/machine'
	[[ $DEPLOY ]] || { # sync all deploys on machine
		local DEPLOY
		for DEPLOY in `ls -1 var/deploys`; do
			machine_of_deploy $DEPLOY; [[ $R1 == $MACHINE ]] || continue
			SRC_DIR=var/deploys/$DEPLOY
			rsync_dir_with_link_targets
		done
	}
}
each_md _f
